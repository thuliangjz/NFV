syntax = "proto3";

package bess.nft;

import "util_msg.proto";

message EmptyArg {

}

message ClsArg {
}

message ClsAddSpecArg {
    message Spec {
        string src_ip = 1;    /// Source IP block in CIDR. Wildcard if "".
        string dst_ip = 2;    /// Destination IP block in CIDR. Wildcard if "".
        uint32 src_port = 3;  /// TCP/UDP source port. Wildcard if 0.
        uint32 dst_port = 4;  /// TCP/UDP Destination port. Wildcard if 0.
        bool is_postcard = 5;  //是否使用postcard模式进行测量，postcard模式与INFT模式二选一
        repeated uint32 tele_type = 6;  //测量码序列
    }
    repeated Spec specs = 1;
}

message FwdArg {
    uint32 id = 1;
}

/*
igate_idx表示镜像组中进入forwarder的那个gate的id,必须是偶数
read_pos　igate_idx读入read_pos的那个gate读入position的位置
write_pos igate_dx + 1发射出去时是否需要修改protocol的位置
*/
message FwdSetProtoRWPosArg {
    uint32 igate_idx = 1;
    uint32 read_pos = 2;
    uint32 write_pos = 3;
}

/*
igate_idx: 镜像组中进入forwarder的gateid，必须是偶数
delimi_pos: 从这个端口进入的数据包的包头截止到哪里（不包含INFT_protocol时的位置）
protocol_number: 从这个端口发出去的数据包的包头第一层协议的协议编号
*/

message FwdSetPostcardArg {
    uint32 igate_idx = 1;
    uint32 delimi_pos = 2;
    uint32 protocol_number = 3;
}

/*
type表示为入口镜像组还是出口镜像组
igate_idx必须为偶数,+1表示离开forwarder的端口的id
report_id是在INFT报告中的igress_id或者egress_id
rate_interval是该节点统计速率时间间隔,以微秒为单位
*/
message FwdAddGateGroupArg {
    uint32 type = 1;
    uint32 igate_idx = 2;
    uint32 report_id = 3;
    uint32 rate_interval = 4;
}